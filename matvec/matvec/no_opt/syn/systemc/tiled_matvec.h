// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tiled_matvec_HH_
#define _tiled_matvec_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct tiled_matvec : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > Atile_V_vec_0_dout;
    sc_in< sc_logic > Atile_V_vec_0_empty_n;
    sc_out< sc_logic > Atile_V_vec_0_read;
    sc_in< sc_lv<32> > Atile_V_vec_1_dout;
    sc_in< sc_logic > Atile_V_vec_1_empty_n;
    sc_out< sc_logic > Atile_V_vec_1_read;
    sc_in< sc_lv<32> > xtile_V_vec_0_dout;
    sc_in< sc_logic > xtile_V_vec_0_empty_n;
    sc_out< sc_logic > xtile_V_vec_0_read;
    sc_in< sc_lv<32> > xtile_V_vec_1_dout;
    sc_in< sc_logic > xtile_V_vec_1_empty_n;
    sc_out< sc_logic > xtile_V_vec_1_read;
    sc_out< sc_lv<3> > ypartial_address0;
    sc_out< sc_logic > ypartial_ce0;
    sc_out< sc_logic > ypartial_we0;
    sc_out< sc_lv<32> > ypartial_d0;
    sc_in< sc_lv<32> > ypartial_q0;
    sc_in< sc_lv<32> > i1;
    sc_in< sc_lv<32> > i2;


    // Module declarations
    tiled_matvec(sc_module_name name);
    SC_HAS_PROCESS(tiled_matvec);

    ~tiled_matvec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > A_1_0;
    sc_signal< sc_lv<32> > A_1_1;
    sc_signal< sc_lv<32> > x_0;
    sc_signal< sc_lv<32> > x_1;
    sc_signal< sc_lv<32> > A_0_0;
    sc_signal< sc_lv<32> > A_0_1;
    sc_signal< sc_logic > Atile_V_vec_0_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln8_fu_230_p2;
    sc_signal< sc_logic > Atile_V_vec_1_blk_n;
    sc_signal< sc_logic > xtile_V_vec_0_blk_n;
    sc_signal< sc_lv<1> > icmp_ln17_fu_254_p2;
    sc_signal< sc_logic > xtile_V_vec_1_blk_n;
    sc_signal< sc_lv<2> > i_fu_236_p2;
    sc_signal< sc_lv<2> > i_reg_534;
    sc_signal< sc_logic > io_acc_block_signal_op28;
    sc_signal< sc_logic > io_acc_block_signal_op36;
    sc_signal< bool > ap_predicate_op36_read_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > tmp_vec_0_reg_539;
    sc_signal< sc_lv<32> > tmp_vec_1_reg_544;
    sc_signal< sc_lv<1> > trunc_ln11_fu_250_p1;
    sc_signal< sc_lv<1> > trunc_ln11_reg_549;
    sc_signal< sc_lv<1> > icmp_ln17_reg_558;
    sc_signal< sc_lv<32> > tmp_vec_0_1_reg_562;
    sc_signal< sc_lv<32> > tmp_vec_1_1_reg_567;
    sc_signal< sc_lv<2> > j_fu_274_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > i_3_fu_320_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > A_1_0_load_reg_608;
    sc_signal< sc_lv<1> > icmp_ln19_fu_314_p2;
    sc_signal< sc_lv<32> > A_1_1_load_reg_613;
    sc_signal< sc_lv<32> > x_0_load_reg_618;
    sc_signal< sc_lv<32> > x_1_load_reg_623;
    sc_signal< sc_lv<32> > A_0_0_load_reg_628;
    sc_signal< sc_lv<32> > A_0_1_load_reg_633;
    sc_signal< sc_lv<2> > i_1_fu_388_p2;
    sc_signal< sc_lv<2> > i_1_reg_641;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > trunc_ln28_fu_394_p1;
    sc_signal< sc_lv<1> > trunc_ln28_reg_646;
    sc_signal< sc_lv<1> > icmp_ln26_fu_382_p2;
    sc_signal< sc_lv<32> > shl_ln35_fu_398_p2;
    sc_signal< sc_lv<32> > shl_ln35_reg_654;
    sc_signal< sc_lv<2> > j_1_fu_409_p2;
    sc_signal< sc_lv<2> > j_1_reg_662;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > mul_ln28_fu_444_p2;
    sc_signal< sc_lv<32> > mul_ln28_reg_667;
    sc_signal< sc_lv<1> > icmp_ln27_fu_403_p2;
    sc_signal< sc_lv<2> > i_4_fu_496_p2;
    sc_signal< sc_lv<2> > i_4_reg_675;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > ypartial_addr_reg_680;
    sc_signal< sc_lv<1> > icmp_ln33_fu_490_p2;
    sc_signal< sc_lv<2> > i_0_reg_157;
    sc_signal< sc_lv<1> > icmp_ln10_fu_268_p2;
    sc_signal< sc_lv<2> > j_0_reg_168;
    sc_signal< sc_lv<2> > i3_0_reg_179;
    sc_signal< sc_lv<2> > i4_0_reg_190;
    sc_signal< sc_lv<2> > j5_0_reg_201;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > i6_0_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > sext_ln35_fu_507_p1;
    sc_signal< sc_lv<32> > select_ln11_fu_284_p3;
    sc_signal< sc_lv<1> > trunc_ln11_1_fu_280_p1;
    sc_signal< sc_lv<32> > select_ln20_fu_330_p3;
    sc_signal< sc_lv<1> > trunc_ln20_fu_326_p1;
    sc_signal< sc_lv<32> > y_1_fu_114;
    sc_signal< sc_lv<32> > y_1_6_fu_469_p3;
    sc_signal< sc_lv<32> > y_1_3_fu_118;
    sc_signal< sc_lv<32> > y_1_5_fu_462_p3;
    sc_signal< sc_lv<1> > trunc_ln28_1_fu_415_p1;
    sc_signal< sc_lv<32> > select_ln28_1_fu_419_p3;
    sc_signal< sc_lv<32> > select_ln28_fu_425_p3;
    sc_signal< sc_lv<32> > select_ln28_4_fu_431_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_438_p3;
    sc_signal< sc_lv<32> > select_ln28_3_fu_450_p3;
    sc_signal< sc_lv<32> > y_0_fu_457_p2;
    sc_signal< sc_lv<32> > zext_ln33_fu_486_p1;
    sc_signal< sc_lv<32> > add_ln35_fu_502_p2;
    sc_signal< sc_lv<1> > trunc_ln35_fu_512_p1;
    sc_signal< sc_lv<32> > select_ln35_fu_516_p3;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Atile_V_vec_0_blk_n();
    void thread_Atile_V_vec_0_read();
    void thread_Atile_V_vec_1_blk_n();
    void thread_Atile_V_vec_1_read();
    void thread_add_ln35_fu_502_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op36_read_state2();
    void thread_ap_ready();
    void thread_i_1_fu_388_p2();
    void thread_i_3_fu_320_p2();
    void thread_i_4_fu_496_p2();
    void thread_i_fu_236_p2();
    void thread_icmp_ln10_fu_268_p2();
    void thread_icmp_ln17_fu_254_p2();
    void thread_icmp_ln19_fu_314_p2();
    void thread_icmp_ln26_fu_382_p2();
    void thread_icmp_ln27_fu_403_p2();
    void thread_icmp_ln33_fu_490_p2();
    void thread_icmp_ln8_fu_230_p2();
    void thread_io_acc_block_signal_op28();
    void thread_io_acc_block_signal_op36();
    void thread_j_1_fu_409_p2();
    void thread_j_fu_274_p2();
    void thread_mul_ln28_fu_444_p2();
    void thread_select_ln11_fu_284_p3();
    void thread_select_ln20_fu_330_p3();
    void thread_select_ln28_1_fu_419_p3();
    void thread_select_ln28_2_fu_438_p3();
    void thread_select_ln28_3_fu_450_p3();
    void thread_select_ln28_4_fu_431_p3();
    void thread_select_ln28_fu_425_p3();
    void thread_select_ln35_fu_516_p3();
    void thread_sext_ln35_fu_507_p1();
    void thread_shl_ln35_fu_398_p2();
    void thread_trunc_ln11_1_fu_280_p1();
    void thread_trunc_ln11_fu_250_p1();
    void thread_trunc_ln20_fu_326_p1();
    void thread_trunc_ln28_1_fu_415_p1();
    void thread_trunc_ln28_fu_394_p1();
    void thread_trunc_ln35_fu_512_p1();
    void thread_xtile_V_vec_0_blk_n();
    void thread_xtile_V_vec_0_read();
    void thread_xtile_V_vec_1_blk_n();
    void thread_xtile_V_vec_1_read();
    void thread_y_0_fu_457_p2();
    void thread_y_1_5_fu_462_p3();
    void thread_y_1_6_fu_469_p3();
    void thread_ypartial_address0();
    void thread_ypartial_ce0();
    void thread_ypartial_d0();
    void thread_ypartial_we0();
    void thread_zext_ln33_fu_486_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
