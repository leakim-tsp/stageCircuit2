// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "tiled_matvec.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic tiled_matvec::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic tiled_matvec::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> tiled_matvec::ap_const_lv3_0 = "000";
const sc_lv<32> tiled_matvec::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<2> tiled_matvec::ap_const_lv2_0 = "00";
const sc_lv<2> tiled_matvec::ap_const_lv2_1 = "1";
const bool tiled_matvec::ap_const_boolean_1 = true;

tiled_matvec::tiled_matvec(sc_module_name name) : sc_module(name), mVcdFile(0) {
    y_U = new tiled_matvec_y("y_U");
    y_U->clk(ap_clk);
    y_U->reset(ap_rst);
    y_U->i_address0(Loop_memset_y_proc_U0_y_address0);
    y_U->i_ce0(Loop_memset_y_proc_U0_y_ce0);
    y_U->i_we0(Loop_memset_y_proc_U0_y_we0);
    y_U->i_d0(Loop_memset_y_proc_U0_y_d0);
    y_U->i_q0(y_i_q0);
    y_U->t_address0(Loop_5_proc_U0_y_address0);
    y_U->t_ce0(Loop_5_proc_U0_y_ce0);
    y_U->t_we0(ap_var_for_const0);
    y_U->t_d0(ap_var_for_const1);
    y_U->t_q0(y_t_q0);
    y_U->i_ce(ap_var_for_const2);
    y_U->t_ce(ap_var_for_const2);
    y_U->i_full_n(y_i_full_n);
    y_U->i_write(Loop_memset_y_proc_U0_ap_done);
    y_U->t_empty_n(y_t_empty_n);
    y_U->t_read(Loop_5_proc_U0_ap_ready);
    tiled_matvec_entry3_U0 = new tiled_matvec_entry3("tiled_matvec_entry3_U0");
    tiled_matvec_entry3_U0->ap_clk(ap_clk);
    tiled_matvec_entry3_U0->ap_rst(ap_rst);
    tiled_matvec_entry3_U0->ap_start(tiled_matvec_entry3_U0_ap_start);
    tiled_matvec_entry3_U0->start_full_n(start_for_tiled_matvec_entry12_U0_full_n);
    tiled_matvec_entry3_U0->ap_done(tiled_matvec_entry3_U0_ap_done);
    tiled_matvec_entry3_U0->ap_continue(tiled_matvec_entry3_U0_ap_continue);
    tiled_matvec_entry3_U0->ap_idle(tiled_matvec_entry3_U0_ap_idle);
    tiled_matvec_entry3_U0->ap_ready(tiled_matvec_entry3_U0_ap_ready);
    tiled_matvec_entry3_U0->start_out(tiled_matvec_entry3_U0_start_out);
    tiled_matvec_entry3_U0->start_write(tiled_matvec_entry3_U0_start_write);
    tiled_matvec_entry3_U0->i2(i2);
    tiled_matvec_entry3_U0->i2_out_din(tiled_matvec_entry3_U0_i2_out_din);
    tiled_matvec_entry3_U0->i2_out_full_n(i2_c1_full_n);
    tiled_matvec_entry3_U0->i2_out_write(tiled_matvec_entry3_U0_i2_out_write);
    tiled_matvec_entry12_U0 = new tiled_matvec_entry12("tiled_matvec_entry12_U0");
    tiled_matvec_entry12_U0->ap_clk(ap_clk);
    tiled_matvec_entry12_U0->ap_rst(ap_rst);
    tiled_matvec_entry12_U0->ap_start(tiled_matvec_entry12_U0_ap_start);
    tiled_matvec_entry12_U0->ap_done(tiled_matvec_entry12_U0_ap_done);
    tiled_matvec_entry12_U0->ap_continue(tiled_matvec_entry12_U0_ap_continue);
    tiled_matvec_entry12_U0->ap_idle(tiled_matvec_entry12_U0_ap_idle);
    tiled_matvec_entry12_U0->ap_ready(tiled_matvec_entry12_U0_ap_ready);
    tiled_matvec_entry12_U0->i2_dout(i2_c1_dout);
    tiled_matvec_entry12_U0->i2_empty_n(i2_c1_empty_n);
    tiled_matvec_entry12_U0->i2_read(tiled_matvec_entry12_U0_i2_read);
    tiled_matvec_entry12_U0->i2_out_din(tiled_matvec_entry12_U0_i2_out_din);
    tiled_matvec_entry12_U0->i2_out_full_n(i2_c_full_n);
    tiled_matvec_entry12_U0->i2_out_write(tiled_matvec_entry12_U0_i2_out_write);
    Loop_1_proc10_U0 = new Loop_1_proc10("Loop_1_proc10_U0");
    Loop_1_proc10_U0->ap_clk(ap_clk);
    Loop_1_proc10_U0->ap_rst(ap_rst);
    Loop_1_proc10_U0->ap_start(Loop_1_proc10_U0_ap_start);
    Loop_1_proc10_U0->ap_done(Loop_1_proc10_U0_ap_done);
    Loop_1_proc10_U0->ap_continue(Loop_1_proc10_U0_ap_continue);
    Loop_1_proc10_U0->ap_idle(Loop_1_proc10_U0_ap_idle);
    Loop_1_proc10_U0->ap_ready(Loop_1_proc10_U0_ap_ready);
    Loop_1_proc10_U0->Atile_V_vec_0_dout(Atile_V_vec_0_dout);
    Loop_1_proc10_U0->Atile_V_vec_0_empty_n(Atile_V_vec_0_empty_n);
    Loop_1_proc10_U0->Atile_V_vec_0_read(Loop_1_proc10_U0_Atile_V_vec_0_read);
    Loop_1_proc10_U0->Atile_V_vec_1_dout(Atile_V_vec_1_dout);
    Loop_1_proc10_U0->Atile_V_vec_1_empty_n(Atile_V_vec_1_empty_n);
    Loop_1_proc10_U0->Atile_V_vec_1_read(Loop_1_proc10_U0_Atile_V_vec_1_read);
    Loop_1_proc10_U0->A_din(Loop_1_proc10_U0_A_din);
    Loop_1_proc10_U0->A_full_n(A_full_n);
    Loop_1_proc10_U0->A_write(Loop_1_proc10_U0_A_write);
    Block_tiled_matvec_U0 = new Block_tiled_matvec_s("Block_tiled_matvec_U0");
    Block_tiled_matvec_U0->ap_clk(ap_clk);
    Block_tiled_matvec_U0->ap_rst(ap_rst);
    Block_tiled_matvec_U0->ap_start(Block_tiled_matvec_U0_ap_start);
    Block_tiled_matvec_U0->ap_done(Block_tiled_matvec_U0_ap_done);
    Block_tiled_matvec_U0->ap_continue(Block_tiled_matvec_U0_ap_continue);
    Block_tiled_matvec_U0->ap_idle(Block_tiled_matvec_U0_ap_idle);
    Block_tiled_matvec_U0->ap_ready(Block_tiled_matvec_U0_ap_ready);
    Block_tiled_matvec_U0->i2_dout(i2_c_dout);
    Block_tiled_matvec_U0->i2_empty_n(i2_c_empty_n);
    Block_tiled_matvec_U0->i2_read(Block_tiled_matvec_U0_i2_read);
    Block_tiled_matvec_U0->xtile_V_vec_0_dout(xtile_V_vec_0_dout);
    Block_tiled_matvec_U0->xtile_V_vec_0_empty_n(xtile_V_vec_0_empty_n);
    Block_tiled_matvec_U0->xtile_V_vec_0_read(Block_tiled_matvec_U0_xtile_V_vec_0_read);
    Block_tiled_matvec_U0->xtile_V_vec_1_dout(xtile_V_vec_1_dout);
    Block_tiled_matvec_U0->xtile_V_vec_1_empty_n(xtile_V_vec_1_empty_n);
    Block_tiled_matvec_U0->xtile_V_vec_1_read(Block_tiled_matvec_U0_xtile_V_vec_1_read);
    Block_tiled_matvec_U0->x_address0(Block_tiled_matvec_U0_x_address0);
    Block_tiled_matvec_U0->x_ce0(Block_tiled_matvec_U0_x_ce0);
    Block_tiled_matvec_U0->x_we0(Block_tiled_matvec_U0_x_we0);
    Block_tiled_matvec_U0->x_d0(Block_tiled_matvec_U0_x_d0);
    Block_tiled_matvec_U0->i2_load_out_out_din(Block_tiled_matvec_U0_i2_load_out_out_din);
    Block_tiled_matvec_U0->i2_load_out_out_full_n(i2_load_loc_c_full_n);
    Block_tiled_matvec_U0->i2_load_out_out_write(Block_tiled_matvec_U0_i2_load_out_out_write);
    Loop_memset_y_proc_U0 = new Loop_memset_y_proc("Loop_memset_y_proc_U0");
    Loop_memset_y_proc_U0->ap_clk(ap_clk);
    Loop_memset_y_proc_U0->ap_rst(ap_rst);
    Loop_memset_y_proc_U0->ap_start(Loop_memset_y_proc_U0_ap_start);
    Loop_memset_y_proc_U0->ap_done(Loop_memset_y_proc_U0_ap_done);
    Loop_memset_y_proc_U0->ap_continue(Loop_memset_y_proc_U0_ap_continue);
    Loop_memset_y_proc_U0->ap_idle(Loop_memset_y_proc_U0_ap_idle);
    Loop_memset_y_proc_U0->ap_ready(Loop_memset_y_proc_U0_ap_ready);
    Loop_memset_y_proc_U0->y_address0(Loop_memset_y_proc_U0_y_address0);
    Loop_memset_y_proc_U0->y_ce0(Loop_memset_y_proc_U0_y_ce0);
    Loop_memset_y_proc_U0->y_we0(Loop_memset_y_proc_U0_y_we0);
    Loop_memset_y_proc_U0->y_d0(Loop_memset_y_proc_U0_y_d0);
    Loop_memset_y_proc_U0->y_q0(y_i_q0);
    Loop_memset_y_proc_U0->A_dout(A_dout);
    Loop_memset_y_proc_U0->A_empty_n(A_empty_n);
    Loop_memset_y_proc_U0->A_read(Loop_memset_y_proc_U0_A_read);
    Loop_memset_y_proc_U0->x_address0(Loop_memset_y_proc_U0_x_address0);
    Loop_memset_y_proc_U0->x_ce0(Loop_memset_y_proc_U0_x_ce0);
    Loop_memset_y_proc_U0->x_q0(x_t_q0);
    Loop_5_proc_U0 = new Loop_5_proc("Loop_5_proc_U0");
    Loop_5_proc_U0->ap_clk(ap_clk);
    Loop_5_proc_U0->ap_rst(ap_rst);
    Loop_5_proc_U0->ap_start(Loop_5_proc_U0_ap_start);
    Loop_5_proc_U0->ap_done(Loop_5_proc_U0_ap_done);
    Loop_5_proc_U0->ap_continue(Loop_5_proc_U0_ap_continue);
    Loop_5_proc_U0->ap_idle(Loop_5_proc_U0_ap_idle);
    Loop_5_proc_U0->ap_ready(Loop_5_proc_U0_ap_ready);
    Loop_5_proc_U0->y_address0(Loop_5_proc_U0_y_address0);
    Loop_5_proc_U0->y_ce0(Loop_5_proc_U0_y_ce0);
    Loop_5_proc_U0->y_q0(y_t_q0);
    Loop_5_proc_U0->i2_load_loc_dout(i2_load_loc_c_dout);
    Loop_5_proc_U0->i2_load_loc_empty_n(i2_load_loc_c_empty_n);
    Loop_5_proc_U0->i2_load_loc_read(Loop_5_proc_U0_i2_load_loc_read);
    Loop_5_proc_U0->ypartial_address0(Loop_5_proc_U0_ypartial_address0);
    Loop_5_proc_U0->ypartial_ce0(Loop_5_proc_U0_ypartial_ce0);
    Loop_5_proc_U0->ypartial_we0(Loop_5_proc_U0_ypartial_we0);
    Loop_5_proc_U0->ypartial_d0(Loop_5_proc_U0_ypartial_d0);
    Loop_5_proc_U0->ypartial_q0(ypartial_q0);
    x_U = new tiled_matvec_x("x_U");
    x_U->clk(ap_clk);
    x_U->reset(ap_rst);
    x_U->i_address0(Block_tiled_matvec_U0_x_address0);
    x_U->i_ce0(Block_tiled_matvec_U0_x_ce0);
    x_U->i_we0(Block_tiled_matvec_U0_x_we0);
    x_U->i_d0(Block_tiled_matvec_U0_x_d0);
    x_U->i_q0(x_i_q0);
    x_U->t_address0(Loop_memset_y_proc_U0_x_address0);
    x_U->t_ce0(Loop_memset_y_proc_U0_x_ce0);
    x_U->t_we0(ap_var_for_const0);
    x_U->t_d0(ap_var_for_const1);
    x_U->t_q0(x_t_q0);
    x_U->i_ce(ap_var_for_const2);
    x_U->t_ce(ap_var_for_const2);
    x_U->i_full_n(x_i_full_n);
    x_U->i_write(Block_tiled_matvec_U0_ap_done);
    x_U->t_empty_n(x_t_empty_n);
    x_U->t_read(Loop_memset_y_proc_U0_ap_ready);
    i2_c1_U = new fifo_w32_d2_A("i2_c1_U");
    i2_c1_U->clk(ap_clk);
    i2_c1_U->reset(ap_rst);
    i2_c1_U->if_read_ce(ap_var_for_const2);
    i2_c1_U->if_write_ce(ap_var_for_const2);
    i2_c1_U->if_din(tiled_matvec_entry3_U0_i2_out_din);
    i2_c1_U->if_full_n(i2_c1_full_n);
    i2_c1_U->if_write(tiled_matvec_entry3_U0_i2_out_write);
    i2_c1_U->if_dout(i2_c1_dout);
    i2_c1_U->if_empty_n(i2_c1_empty_n);
    i2_c1_U->if_read(tiled_matvec_entry12_U0_i2_read);
    i2_c_U = new fifo_w32_d2_A("i2_c_U");
    i2_c_U->clk(ap_clk);
    i2_c_U->reset(ap_rst);
    i2_c_U->if_read_ce(ap_var_for_const2);
    i2_c_U->if_write_ce(ap_var_for_const2);
    i2_c_U->if_din(tiled_matvec_entry12_U0_i2_out_din);
    i2_c_U->if_full_n(i2_c_full_n);
    i2_c_U->if_write(tiled_matvec_entry12_U0_i2_out_write);
    i2_c_U->if_dout(i2_c_dout);
    i2_c_U->if_empty_n(i2_c_empty_n);
    i2_c_U->if_read(Block_tiled_matvec_U0_i2_read);
    A_U = new fifo_w32_d4_A("A_U");
    A_U->clk(ap_clk);
    A_U->reset(ap_rst);
    A_U->if_read_ce(ap_var_for_const2);
    A_U->if_write_ce(ap_var_for_const2);
    A_U->if_din(Loop_1_proc10_U0_A_din);
    A_U->if_full_n(A_full_n);
    A_U->if_write(Loop_1_proc10_U0_A_write);
    A_U->if_dout(A_dout);
    A_U->if_empty_n(A_empty_n);
    A_U->if_read(Loop_memset_y_proc_U0_A_read);
    i2_load_loc_c_U = new fifo_w32_d3_A("i2_load_loc_c_U");
    i2_load_loc_c_U->clk(ap_clk);
    i2_load_loc_c_U->reset(ap_rst);
    i2_load_loc_c_U->if_read_ce(ap_var_for_const2);
    i2_load_loc_c_U->if_write_ce(ap_var_for_const2);
    i2_load_loc_c_U->if_din(Block_tiled_matvec_U0_i2_load_out_out_din);
    i2_load_loc_c_U->if_full_n(i2_load_loc_c_full_n);
    i2_load_loc_c_U->if_write(Block_tiled_matvec_U0_i2_load_out_out_write);
    i2_load_loc_c_U->if_dout(i2_load_loc_c_dout);
    i2_load_loc_c_U->if_empty_n(i2_load_loc_c_empty_n);
    i2_load_loc_c_U->if_read(Loop_5_proc_U0_i2_load_loc_read);
    start_for_tiled_mbkb_U = new start_for_tiled_mbkb("start_for_tiled_mbkb_U");
    start_for_tiled_mbkb_U->clk(ap_clk);
    start_for_tiled_mbkb_U->reset(ap_rst);
    start_for_tiled_mbkb_U->if_read_ce(ap_var_for_const2);
    start_for_tiled_mbkb_U->if_write_ce(ap_var_for_const2);
    start_for_tiled_mbkb_U->if_din(start_for_tiled_matvec_entry12_U0_din);
    start_for_tiled_mbkb_U->if_full_n(start_for_tiled_matvec_entry12_U0_full_n);
    start_for_tiled_mbkb_U->if_write(tiled_matvec_entry3_U0_start_write);
    start_for_tiled_mbkb_U->if_dout(start_for_tiled_matvec_entry12_U0_dout);
    start_for_tiled_mbkb_U->if_empty_n(start_for_tiled_matvec_entry12_U0_empty_n);
    start_for_tiled_mbkb_U->if_read(tiled_matvec_entry12_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Atile_V_vec_0_read);
    sensitive << ( Loop_1_proc10_U0_Atile_V_vec_0_read );

    SC_METHOD(thread_Atile_V_vec_1_read);
    sensitive << ( Loop_1_proc10_U0_Atile_V_vec_1_read );

    SC_METHOD(thread_Block_tiled_matvec_U0_ap_continue);
    sensitive << ( x_i_full_n );

    SC_METHOD(thread_Block_tiled_matvec_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_tiled_matvec_U0_ap_ready );

    SC_METHOD(thread_Block_tiled_matvec_U0_start_full_n);

    SC_METHOD(thread_Block_tiled_matvec_U0_start_write);

    SC_METHOD(thread_Block_tiled_matvec_U0_x_full_n);
    sensitive << ( x_i_full_n );

    SC_METHOD(thread_Loop_1_proc10_U0_ap_continue);

    SC_METHOD(thread_Loop_1_proc10_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Loop_1_proc10_U0_ap_ready );

    SC_METHOD(thread_Loop_1_proc10_U0_start_full_n);

    SC_METHOD(thread_Loop_1_proc10_U0_start_write);

    SC_METHOD(thread_Loop_5_proc_U0_ap_continue);

    SC_METHOD(thread_Loop_5_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( y_t_empty_n );
    sensitive << ( ap_sync_reg_Loop_5_proc_U0_ap_ready );

    SC_METHOD(thread_Loop_5_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_5_proc_U0_start_write);

    SC_METHOD(thread_Loop_memset_y_proc_U0_ap_continue);
    sensitive << ( y_i_full_n );

    SC_METHOD(thread_Loop_memset_y_proc_U0_ap_start);
    sensitive << ( x_t_empty_n );

    SC_METHOD(thread_Loop_memset_y_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_memset_y_proc_U0_start_write);

    SC_METHOD(thread_Loop_memset_y_proc_U0_y_full_n);
    sensitive << ( y_i_full_n );

    SC_METHOD(thread_ap_channel_done_x);
    sensitive << ( Block_tiled_matvec_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_y);
    sensitive << ( Loop_memset_y_proc_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( Loop_5_proc_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( tiled_matvec_entry3_U0_ap_idle );
    sensitive << ( tiled_matvec_entry12_U0_ap_idle );
    sensitive << ( Loop_1_proc10_U0_ap_idle );
    sensitive << ( Block_tiled_matvec_U0_ap_idle );
    sensitive << ( Loop_memset_y_proc_U0_ap_idle );
    sensitive << ( Loop_5_proc_U0_ap_idle );
    sensitive << ( x_t_empty_n );
    sensitive << ( y_t_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_Block_tiled_matvec_U0_ap_ready);
    sensitive << ( Block_tiled_matvec_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_tiled_matvec_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Loop_1_proc10_U0_ap_ready);
    sensitive << ( Loop_1_proc10_U0_ap_ready );
    sensitive << ( ap_sync_reg_Loop_1_proc10_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Loop_5_proc_U0_ap_ready);
    sensitive << ( Loop_5_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Loop_5_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Loop_5_proc_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_tiled_matvec_entry3_U0_ap_ready );
    sensitive << ( ap_sync_Loop_1_proc10_U0_ap_ready );
    sensitive << ( ap_sync_Block_tiled_matvec_U0_ap_ready );
    sensitive << ( ap_sync_Loop_5_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_tiled_matvec_entry3_U0_ap_ready);
    sensitive << ( tiled_matvec_entry3_U0_ap_ready );
    sensitive << ( ap_sync_reg_tiled_matvec_entry3_U0_ap_ready );

    SC_METHOD(thread_start_for_tiled_matvec_entry12_U0_din);

    SC_METHOD(thread_tiled_matvec_entry12_U0_ap_continue);

    SC_METHOD(thread_tiled_matvec_entry12_U0_ap_start);
    sensitive << ( start_for_tiled_matvec_entry12_U0_empty_n );

    SC_METHOD(thread_tiled_matvec_entry12_U0_start_full_n);

    SC_METHOD(thread_tiled_matvec_entry12_U0_start_write);

    SC_METHOD(thread_tiled_matvec_entry3_U0_ap_continue);

    SC_METHOD(thread_tiled_matvec_entry3_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_tiled_matvec_entry3_U0_ap_ready );

    SC_METHOD(thread_xtile_V_vec_0_read);
    sensitive << ( Block_tiled_matvec_U0_xtile_V_vec_0_read );

    SC_METHOD(thread_xtile_V_vec_1_read);
    sensitive << ( Block_tiled_matvec_U0_xtile_V_vec_1_read );

    SC_METHOD(thread_ypartial_address0);
    sensitive << ( Loop_5_proc_U0_ypartial_address0 );

    SC_METHOD(thread_ypartial_address1);

    SC_METHOD(thread_ypartial_ce0);
    sensitive << ( Loop_5_proc_U0_ypartial_ce0 );

    SC_METHOD(thread_ypartial_ce1);

    SC_METHOD(thread_ypartial_d0);
    sensitive << ( Loop_5_proc_U0_ypartial_d0 );

    SC_METHOD(thread_ypartial_d1);

    SC_METHOD(thread_ypartial_we0);
    sensitive << ( Loop_5_proc_U0_ypartial_we0 );

    SC_METHOD(thread_ypartial_we1);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_sync_reg_tiled_matvec_entry3_U0_ap_ready = SC_LOGIC_0;
    tiled_matvec_entry3_U0_ap_ready_count = "00";
    ap_sync_reg_Loop_1_proc10_U0_ap_ready = SC_LOGIC_0;
    Loop_1_proc10_U0_ap_ready_count = "00";
    ap_sync_reg_Block_tiled_matvec_U0_ap_ready = SC_LOGIC_0;
    Block_tiled_matvec_U0_ap_ready_count = "00";
    ap_sync_reg_Loop_5_proc_U0_ap_ready = SC_LOGIC_0;
    Loop_5_proc_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "tiled_matvec_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, Atile_V_vec_0_dout, "(port)Atile_V_vec_0_dout");
    sc_trace(mVcdFile, Atile_V_vec_0_empty_n, "(port)Atile_V_vec_0_empty_n");
    sc_trace(mVcdFile, Atile_V_vec_0_read, "(port)Atile_V_vec_0_read");
    sc_trace(mVcdFile, Atile_V_vec_1_dout, "(port)Atile_V_vec_1_dout");
    sc_trace(mVcdFile, Atile_V_vec_1_empty_n, "(port)Atile_V_vec_1_empty_n");
    sc_trace(mVcdFile, Atile_V_vec_1_read, "(port)Atile_V_vec_1_read");
    sc_trace(mVcdFile, xtile_V_vec_0_dout, "(port)xtile_V_vec_0_dout");
    sc_trace(mVcdFile, xtile_V_vec_0_empty_n, "(port)xtile_V_vec_0_empty_n");
    sc_trace(mVcdFile, xtile_V_vec_0_read, "(port)xtile_V_vec_0_read");
    sc_trace(mVcdFile, xtile_V_vec_1_dout, "(port)xtile_V_vec_1_dout");
    sc_trace(mVcdFile, xtile_V_vec_1_empty_n, "(port)xtile_V_vec_1_empty_n");
    sc_trace(mVcdFile, xtile_V_vec_1_read, "(port)xtile_V_vec_1_read");
    sc_trace(mVcdFile, ypartial_address0, "(port)ypartial_address0");
    sc_trace(mVcdFile, ypartial_ce0, "(port)ypartial_ce0");
    sc_trace(mVcdFile, ypartial_d0, "(port)ypartial_d0");
    sc_trace(mVcdFile, ypartial_q0, "(port)ypartial_q0");
    sc_trace(mVcdFile, ypartial_we0, "(port)ypartial_we0");
    sc_trace(mVcdFile, ypartial_address1, "(port)ypartial_address1");
    sc_trace(mVcdFile, ypartial_ce1, "(port)ypartial_ce1");
    sc_trace(mVcdFile, ypartial_d1, "(port)ypartial_d1");
    sc_trace(mVcdFile, ypartial_q1, "(port)ypartial_q1");
    sc_trace(mVcdFile, ypartial_we1, "(port)ypartial_we1");
    sc_trace(mVcdFile, i1, "(port)i1");
    sc_trace(mVcdFile, i2, "(port)i2");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, y_i_q0, "y_i_q0");
    sc_trace(mVcdFile, y_t_q0, "y_t_q0");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_start, "tiled_matvec_entry3_U0_ap_start");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_done, "tiled_matvec_entry3_U0_ap_done");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_continue, "tiled_matvec_entry3_U0_ap_continue");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_idle, "tiled_matvec_entry3_U0_ap_idle");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_ready, "tiled_matvec_entry3_U0_ap_ready");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_start_out, "tiled_matvec_entry3_U0_start_out");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_start_write, "tiled_matvec_entry3_U0_start_write");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_i2_out_din, "tiled_matvec_entry3_U0_i2_out_din");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_i2_out_write, "tiled_matvec_entry3_U0_i2_out_write");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_ap_start, "tiled_matvec_entry12_U0_ap_start");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_ap_done, "tiled_matvec_entry12_U0_ap_done");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_ap_continue, "tiled_matvec_entry12_U0_ap_continue");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_ap_idle, "tiled_matvec_entry12_U0_ap_idle");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_ap_ready, "tiled_matvec_entry12_U0_ap_ready");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_i2_read, "tiled_matvec_entry12_U0_i2_read");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_i2_out_din, "tiled_matvec_entry12_U0_i2_out_din");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_i2_out_write, "tiled_matvec_entry12_U0_i2_out_write");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_start, "Loop_1_proc10_U0_ap_start");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_done, "Loop_1_proc10_U0_ap_done");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_continue, "Loop_1_proc10_U0_ap_continue");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_idle, "Loop_1_proc10_U0_ap_idle");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_ready, "Loop_1_proc10_U0_ap_ready");
    sc_trace(mVcdFile, Loop_1_proc10_U0_Atile_V_vec_0_read, "Loop_1_proc10_U0_Atile_V_vec_0_read");
    sc_trace(mVcdFile, Loop_1_proc10_U0_Atile_V_vec_1_read, "Loop_1_proc10_U0_Atile_V_vec_1_read");
    sc_trace(mVcdFile, Loop_1_proc10_U0_A_din, "Loop_1_proc10_U0_A_din");
    sc_trace(mVcdFile, Loop_1_proc10_U0_A_write, "Loop_1_proc10_U0_A_write");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_start, "Block_tiled_matvec_U0_ap_start");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_done, "Block_tiled_matvec_U0_ap_done");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_continue, "Block_tiled_matvec_U0_ap_continue");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_idle, "Block_tiled_matvec_U0_ap_idle");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_ready, "Block_tiled_matvec_U0_ap_ready");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_i2_read, "Block_tiled_matvec_U0_i2_read");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_xtile_V_vec_0_read, "Block_tiled_matvec_U0_xtile_V_vec_0_read");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_xtile_V_vec_1_read, "Block_tiled_matvec_U0_xtile_V_vec_1_read");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_x_address0, "Block_tiled_matvec_U0_x_address0");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_x_ce0, "Block_tiled_matvec_U0_x_ce0");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_x_we0, "Block_tiled_matvec_U0_x_we0");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_x_d0, "Block_tiled_matvec_U0_x_d0");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_i2_load_out_out_din, "Block_tiled_matvec_U0_i2_load_out_out_din");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_i2_load_out_out_write, "Block_tiled_matvec_U0_i2_load_out_out_write");
    sc_trace(mVcdFile, ap_channel_done_x, "ap_channel_done_x");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_x_full_n, "Block_tiled_matvec_U0_x_full_n");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_ap_start, "Loop_memset_y_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_ap_done, "Loop_memset_y_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_ap_continue, "Loop_memset_y_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_ap_idle, "Loop_memset_y_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_ap_ready, "Loop_memset_y_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_y_address0, "Loop_memset_y_proc_U0_y_address0");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_y_ce0, "Loop_memset_y_proc_U0_y_ce0");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_y_we0, "Loop_memset_y_proc_U0_y_we0");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_y_d0, "Loop_memset_y_proc_U0_y_d0");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_A_read, "Loop_memset_y_proc_U0_A_read");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_x_address0, "Loop_memset_y_proc_U0_x_address0");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_x_ce0, "Loop_memset_y_proc_U0_x_ce0");
    sc_trace(mVcdFile, ap_channel_done_y, "ap_channel_done_y");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_y_full_n, "Loop_memset_y_proc_U0_y_full_n");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_start, "Loop_5_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_done, "Loop_5_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_continue, "Loop_5_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_idle, "Loop_5_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_ready, "Loop_5_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_5_proc_U0_y_address0, "Loop_5_proc_U0_y_address0");
    sc_trace(mVcdFile, Loop_5_proc_U0_y_ce0, "Loop_5_proc_U0_y_ce0");
    sc_trace(mVcdFile, Loop_5_proc_U0_i2_load_loc_read, "Loop_5_proc_U0_i2_load_loc_read");
    sc_trace(mVcdFile, Loop_5_proc_U0_ypartial_address0, "Loop_5_proc_U0_ypartial_address0");
    sc_trace(mVcdFile, Loop_5_proc_U0_ypartial_ce0, "Loop_5_proc_U0_ypartial_ce0");
    sc_trace(mVcdFile, Loop_5_proc_U0_ypartial_we0, "Loop_5_proc_U0_ypartial_we0");
    sc_trace(mVcdFile, Loop_5_proc_U0_ypartial_d0, "Loop_5_proc_U0_ypartial_d0");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, x_i_q0, "x_i_q0");
    sc_trace(mVcdFile, x_t_q0, "x_t_q0");
    sc_trace(mVcdFile, x_i_full_n, "x_i_full_n");
    sc_trace(mVcdFile, x_t_empty_n, "x_t_empty_n");
    sc_trace(mVcdFile, y_i_full_n, "y_i_full_n");
    sc_trace(mVcdFile, y_t_empty_n, "y_t_empty_n");
    sc_trace(mVcdFile, i2_c1_full_n, "i2_c1_full_n");
    sc_trace(mVcdFile, i2_c1_dout, "i2_c1_dout");
    sc_trace(mVcdFile, i2_c1_empty_n, "i2_c1_empty_n");
    sc_trace(mVcdFile, i2_c_full_n, "i2_c_full_n");
    sc_trace(mVcdFile, i2_c_dout, "i2_c_dout");
    sc_trace(mVcdFile, i2_c_empty_n, "i2_c_empty_n");
    sc_trace(mVcdFile, A_full_n, "A_full_n");
    sc_trace(mVcdFile, A_dout, "A_dout");
    sc_trace(mVcdFile, A_empty_n, "A_empty_n");
    sc_trace(mVcdFile, i2_load_loc_c_full_n, "i2_load_loc_c_full_n");
    sc_trace(mVcdFile, i2_load_loc_c_dout, "i2_load_loc_c_dout");
    sc_trace(mVcdFile, i2_load_loc_c_empty_n, "i2_load_loc_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_tiled_matvec_entry3_U0_ap_ready, "ap_sync_reg_tiled_matvec_entry3_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_tiled_matvec_entry3_U0_ap_ready, "ap_sync_tiled_matvec_entry3_U0_ap_ready");
    sc_trace(mVcdFile, tiled_matvec_entry3_U0_ap_ready_count, "tiled_matvec_entry3_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Loop_1_proc10_U0_ap_ready, "ap_sync_reg_Loop_1_proc10_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Loop_1_proc10_U0_ap_ready, "ap_sync_Loop_1_proc10_U0_ap_ready");
    sc_trace(mVcdFile, Loop_1_proc10_U0_ap_ready_count, "Loop_1_proc10_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Block_tiled_matvec_U0_ap_ready, "ap_sync_reg_Block_tiled_matvec_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_tiled_matvec_U0_ap_ready, "ap_sync_Block_tiled_matvec_U0_ap_ready");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_ap_ready_count, "Block_tiled_matvec_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Loop_5_proc_U0_ap_ready, "ap_sync_reg_Loop_5_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Loop_5_proc_U0_ap_ready, "ap_sync_Loop_5_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_ready_count, "Loop_5_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_tiled_matvec_entry12_U0_din, "start_for_tiled_matvec_entry12_U0_din");
    sc_trace(mVcdFile, start_for_tiled_matvec_entry12_U0_full_n, "start_for_tiled_matvec_entry12_U0_full_n");
    sc_trace(mVcdFile, start_for_tiled_matvec_entry12_U0_dout, "start_for_tiled_matvec_entry12_U0_dout");
    sc_trace(mVcdFile, start_for_tiled_matvec_entry12_U0_empty_n, "start_for_tiled_matvec_entry12_U0_empty_n");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_start_full_n, "tiled_matvec_entry12_U0_start_full_n");
    sc_trace(mVcdFile, tiled_matvec_entry12_U0_start_write, "tiled_matvec_entry12_U0_start_write");
    sc_trace(mVcdFile, Loop_1_proc10_U0_start_full_n, "Loop_1_proc10_U0_start_full_n");
    sc_trace(mVcdFile, Loop_1_proc10_U0_start_write, "Loop_1_proc10_U0_start_write");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_start_full_n, "Block_tiled_matvec_U0_start_full_n");
    sc_trace(mVcdFile, Block_tiled_matvec_U0_start_write, "Block_tiled_matvec_U0_start_write");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_start_full_n, "Loop_memset_y_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_memset_y_proc_U0_start_write, "Loop_memset_y_proc_U0_start_write");
    sc_trace(mVcdFile, Loop_5_proc_U0_start_full_n, "Loop_5_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_5_proc_U0_start_write, "Loop_5_proc_U0_start_write");
#endif

    }
    mHdltvinHandle.open("tiled_matvec.hdltvin.dat");
    mHdltvoutHandle.open("tiled_matvec.hdltvout.dat");
}

tiled_matvec::~tiled_matvec() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete y_U;
    delete tiled_matvec_entry3_U0;
    delete tiled_matvec_entry12_U0;
    delete Loop_1_proc10_U0;
    delete Block_tiled_matvec_U0;
    delete Loop_memset_y_proc_U0;
    delete Loop_5_proc_U0;
    delete x_U;
    delete i2_c1_U;
    delete i2_c_U;
    delete A_U;
    delete i2_load_loc_c_U;
    delete start_for_tiled_mbkb_U;
}

void tiled_matvec::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void tiled_matvec::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void tiled_matvec::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void tiled_matvec::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Block_tiled_matvec_U0_ap_ready.read()))) {
        Block_tiled_matvec_U0_ap_ready_count = (!Block_tiled_matvec_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_tiled_matvec_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Block_tiled_matvec_U0_ap_ready.read()))) {
        Block_tiled_matvec_U0_ap_ready_count = (!Block_tiled_matvec_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_tiled_matvec_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Loop_1_proc10_U0_ap_ready.read()))) {
        Loop_1_proc10_U0_ap_ready_count = (!Loop_1_proc10_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_1_proc10_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Loop_1_proc10_U0_ap_ready.read()))) {
        Loop_1_proc10_U0_ap_ready_count = (!Loop_1_proc10_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_1_proc10_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, Loop_5_proc_U0_ap_ready.read()))) {
        Loop_5_proc_U0_ap_ready_count = (!Loop_5_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_5_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Loop_5_proc_U0_ap_ready.read()))) {
        Loop_5_proc_U0_ap_ready_count = (!Loop_5_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Loop_5_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Block_tiled_matvec_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_tiled_matvec_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_tiled_matvec_U0_ap_ready = ap_sync_Block_tiled_matvec_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Loop_1_proc10_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Loop_1_proc10_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Loop_1_proc10_U0_ap_ready = ap_sync_Loop_1_proc10_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_Loop_5_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Loop_5_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Loop_5_proc_U0_ap_ready = ap_sync_Loop_5_proc_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_tiled_matvec_entry3_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_tiled_matvec_entry3_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_tiled_matvec_entry3_U0_ap_ready = ap_sync_tiled_matvec_entry3_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, tiled_matvec_entry3_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        tiled_matvec_entry3_U0_ap_ready_count = (!tiled_matvec_entry3_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(tiled_matvec_entry3_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, tiled_matvec_entry3_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        tiled_matvec_entry3_U0_ap_ready_count = (!tiled_matvec_entry3_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(tiled_matvec_entry3_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void tiled_matvec::thread_Atile_V_vec_0_read() {
    Atile_V_vec_0_read = Loop_1_proc10_U0_Atile_V_vec_0_read.read();
}

void tiled_matvec::thread_Atile_V_vec_1_read() {
    Atile_V_vec_1_read = Loop_1_proc10_U0_Atile_V_vec_1_read.read();
}

void tiled_matvec::thread_Block_tiled_matvec_U0_ap_continue() {
    Block_tiled_matvec_U0_ap_continue = x_i_full_n.read();
}

void tiled_matvec::thread_Block_tiled_matvec_U0_ap_start() {
    Block_tiled_matvec_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_tiled_matvec_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void tiled_matvec::thread_Block_tiled_matvec_U0_start_full_n() {
    Block_tiled_matvec_U0_start_full_n = ap_const_logic_1;
}

void tiled_matvec::thread_Block_tiled_matvec_U0_start_write() {
    Block_tiled_matvec_U0_start_write = ap_const_logic_0;
}

void tiled_matvec::thread_Block_tiled_matvec_U0_x_full_n() {
    Block_tiled_matvec_U0_x_full_n = x_i_full_n.read();
}

void tiled_matvec::thread_Loop_1_proc10_U0_ap_continue() {
    Loop_1_proc10_U0_ap_continue = ap_const_logic_1;
}

void tiled_matvec::thread_Loop_1_proc10_U0_ap_start() {
    Loop_1_proc10_U0_ap_start = (ap_start.read() & (ap_sync_reg_Loop_1_proc10_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void tiled_matvec::thread_Loop_1_proc10_U0_start_full_n() {
    Loop_1_proc10_U0_start_full_n = ap_const_logic_1;
}

void tiled_matvec::thread_Loop_1_proc10_U0_start_write() {
    Loop_1_proc10_U0_start_write = ap_const_logic_0;
}

void tiled_matvec::thread_Loop_5_proc_U0_ap_continue() {
    Loop_5_proc_U0_ap_continue = ap_const_logic_1;
}

void tiled_matvec::thread_Loop_5_proc_U0_ap_start() {
    Loop_5_proc_U0_ap_start = (ap_start.read() & y_t_empty_n.read() & (ap_sync_reg_Loop_5_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void tiled_matvec::thread_Loop_5_proc_U0_start_full_n() {
    Loop_5_proc_U0_start_full_n = ap_const_logic_1;
}

void tiled_matvec::thread_Loop_5_proc_U0_start_write() {
    Loop_5_proc_U0_start_write = ap_const_logic_0;
}

void tiled_matvec::thread_Loop_memset_y_proc_U0_ap_continue() {
    Loop_memset_y_proc_U0_ap_continue = y_i_full_n.read();
}

void tiled_matvec::thread_Loop_memset_y_proc_U0_ap_start() {
    Loop_memset_y_proc_U0_ap_start = x_t_empty_n.read();
}

void tiled_matvec::thread_Loop_memset_y_proc_U0_start_full_n() {
    Loop_memset_y_proc_U0_start_full_n = ap_const_logic_1;
}

void tiled_matvec::thread_Loop_memset_y_proc_U0_start_write() {
    Loop_memset_y_proc_U0_start_write = ap_const_logic_0;
}

void tiled_matvec::thread_Loop_memset_y_proc_U0_y_full_n() {
    Loop_memset_y_proc_U0_y_full_n = y_i_full_n.read();
}

void tiled_matvec::thread_ap_channel_done_x() {
    ap_channel_done_x = Block_tiled_matvec_U0_ap_done.read();
}

void tiled_matvec::thread_ap_channel_done_y() {
    ap_channel_done_y = Loop_memset_y_proc_U0_ap_done.read();
}

void tiled_matvec::thread_ap_done() {
    ap_done = Loop_5_proc_U0_ap_done.read();
}

void tiled_matvec::thread_ap_idle() {
    ap_idle = (tiled_matvec_entry3_U0_ap_idle.read() & tiled_matvec_entry12_U0_ap_idle.read() & Loop_1_proc10_U0_ap_idle.read() & Block_tiled_matvec_U0_ap_idle.read() & Loop_memset_y_proc_U0_ap_idle.read() & Loop_5_proc_U0_ap_idle.read() & (x_t_empty_n.read() ^ 
  ap_const_logic_1) & (y_t_empty_n.read() ^ 
  ap_const_logic_1));
}

void tiled_matvec::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void tiled_matvec::thread_ap_sync_Block_tiled_matvec_U0_ap_ready() {
    ap_sync_Block_tiled_matvec_U0_ap_ready = (Block_tiled_matvec_U0_ap_ready.read() | ap_sync_reg_Block_tiled_matvec_U0_ap_ready.read());
}

void tiled_matvec::thread_ap_sync_Loop_1_proc10_U0_ap_ready() {
    ap_sync_Loop_1_proc10_U0_ap_ready = (Loop_1_proc10_U0_ap_ready.read() | ap_sync_reg_Loop_1_proc10_U0_ap_ready.read());
}

void tiled_matvec::thread_ap_sync_Loop_5_proc_U0_ap_ready() {
    ap_sync_Loop_5_proc_U0_ap_ready = (Loop_5_proc_U0_ap_ready.read() | ap_sync_reg_Loop_5_proc_U0_ap_ready.read());
}

void tiled_matvec::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void tiled_matvec::thread_ap_sync_done() {
    ap_sync_done = Loop_5_proc_U0_ap_done.read();
}

void tiled_matvec::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_tiled_matvec_entry3_U0_ap_ready.read() & ap_sync_Loop_1_proc10_U0_ap_ready.read() & ap_sync_Block_tiled_matvec_U0_ap_ready.read() & ap_sync_Loop_5_proc_U0_ap_ready.read());
}

void tiled_matvec::thread_ap_sync_tiled_matvec_entry3_U0_ap_ready() {
    ap_sync_tiled_matvec_entry3_U0_ap_ready = (tiled_matvec_entry3_U0_ap_ready.read() | ap_sync_reg_tiled_matvec_entry3_U0_ap_ready.read());
}

void tiled_matvec::thread_start_for_tiled_matvec_entry12_U0_din() {
    start_for_tiled_matvec_entry12_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void tiled_matvec::thread_tiled_matvec_entry12_U0_ap_continue() {
    tiled_matvec_entry12_U0_ap_continue = ap_const_logic_1;
}

void tiled_matvec::thread_tiled_matvec_entry12_U0_ap_start() {
    tiled_matvec_entry12_U0_ap_start = start_for_tiled_matvec_entry12_U0_empty_n.read();
}

void tiled_matvec::thread_tiled_matvec_entry12_U0_start_full_n() {
    tiled_matvec_entry12_U0_start_full_n = ap_const_logic_1;
}

void tiled_matvec::thread_tiled_matvec_entry12_U0_start_write() {
    tiled_matvec_entry12_U0_start_write = ap_const_logic_0;
}

void tiled_matvec::thread_tiled_matvec_entry3_U0_ap_continue() {
    tiled_matvec_entry3_U0_ap_continue = ap_const_logic_1;
}

void tiled_matvec::thread_tiled_matvec_entry3_U0_ap_start() {
    tiled_matvec_entry3_U0_ap_start = (ap_start.read() & (ap_sync_reg_tiled_matvec_entry3_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void tiled_matvec::thread_xtile_V_vec_0_read() {
    xtile_V_vec_0_read = Block_tiled_matvec_U0_xtile_V_vec_0_read.read();
}

void tiled_matvec::thread_xtile_V_vec_1_read() {
    xtile_V_vec_1_read = Block_tiled_matvec_U0_xtile_V_vec_1_read.read();
}

void tiled_matvec::thread_ypartial_address0() {
    ypartial_address0 = Loop_5_proc_U0_ypartial_address0.read();
}

void tiled_matvec::thread_ypartial_address1() {
    ypartial_address1 = ap_const_lv3_0;
}

void tiled_matvec::thread_ypartial_ce0() {
    ypartial_ce0 = Loop_5_proc_U0_ypartial_ce0.read();
}

void tiled_matvec::thread_ypartial_ce1() {
    ypartial_ce1 = ap_const_logic_0;
}

void tiled_matvec::thread_ypartial_d0() {
    ypartial_d0 = Loop_5_proc_U0_ypartial_d0.read();
}

void tiled_matvec::thread_ypartial_d1() {
    ypartial_d1 = ap_const_lv32_0;
}

void tiled_matvec::thread_ypartial_we0() {
    ypartial_we0 = Loop_5_proc_U0_ypartial_we0.read();
}

void tiled_matvec::thread_ypartial_we1() {
    ypartial_we1 = ap_const_logic_0;
}

void tiled_matvec::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Atile_V_vec_0_dout\" :  \"" << Atile_V_vec_0_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Atile_V_vec_0_empty_n\" :  \"" << Atile_V_vec_0_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Atile_V_vec_0_read\" :  \"" << Atile_V_vec_0_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Atile_V_vec_1_dout\" :  \"" << Atile_V_vec_1_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Atile_V_vec_1_empty_n\" :  \"" << Atile_V_vec_1_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Atile_V_vec_1_read\" :  \"" << Atile_V_vec_1_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"xtile_V_vec_0_dout\" :  \"" << xtile_V_vec_0_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"xtile_V_vec_0_empty_n\" :  \"" << xtile_V_vec_0_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"xtile_V_vec_0_read\" :  \"" << xtile_V_vec_0_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"xtile_V_vec_1_dout\" :  \"" << xtile_V_vec_1_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"xtile_V_vec_1_empty_n\" :  \"" << xtile_V_vec_1_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"xtile_V_vec_1_read\" :  \"" << xtile_V_vec_1_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_address0\" :  \"" << ypartial_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_ce0\" :  \"" << ypartial_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_d0\" :  \"" << ypartial_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ypartial_q0\" :  \"" << ypartial_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_we0\" :  \"" << ypartial_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_address1\" :  \"" << ypartial_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_ce1\" :  \"" << ypartial_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_d1\" :  \"" << ypartial_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ypartial_q1\" :  \"" << ypartial_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ypartial_we1\" :  \"" << ypartial_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i1\" :  \"" << i1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i2\" :  \"" << i2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

